<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="FromRecords.php" path="/Rhythms/Builders/SynodicRhythm">
    <totals>
      <lines total="75" comments="34" code="41" executable="12" executed="12" percent="100.00"/>
      <methods count="4" tested="4" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="MarcoConsiglio\Ephemeris\Rhythms\Builders\SynodicRhythm\FromRecords" start="12" executable="12" executed="12" crap="6">
      <namespace name="MarcoConsiglio\Ephemeris\Rhythms\Builders\SynodicRhythm"/>
      <method name="__construct" signature="__construct($data)" start="33" end="36" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="validateData" signature="validateData()" start="44" end="55" crap="3" executable="8" executed="8" coverage="100"/>
      <method name="buildRecords" signature="buildRecords()" start="62" end="65" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="fetchCollection" signature="fetchCollection(): MarcoConsiglio\Ephemeris\Rhythms\SynodicRhythm" start="72" end="75" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="35">
        <covered by="MarcoConsiglio\Ephemeris\Tests\Unit\Builders\SynodicRhythm\FromRecordsTest::test_build_synodic_rhythm_from_records"/>
        <covered by="MarcoConsiglio\Ephemeris\Tests\Unit\Builders\SynodicRhythm\FromRecordsTest::test_from_records_builder_wants_array_data"/>
        <covered by="MarcoConsiglio\Ephemeris\Tests\Unit\Builders\SynodicRhythm\FromRecordsTest::test_from_records_builder_wants_synodic_rhythm_records"/>
      </line>
      <line nr="36">
        <covered by="MarcoConsiglio\Ephemeris\Tests\Unit\Builders\SynodicRhythm\FromRecordsTest::test_build_synodic_rhythm_from_records"/>
        <covered by="MarcoConsiglio\Ephemeris\Tests\Unit\Builders\SynodicRhythm\FromRecordsTest::test_from_records_builder_wants_array_data"/>
        <covered by="MarcoConsiglio\Ephemeris\Tests\Unit\Builders\SynodicRhythm\FromRecordsTest::test_from_records_builder_wants_synodic_rhythm_records"/>
      </line>
      <line nr="46">
        <covered by="MarcoConsiglio\Ephemeris\Tests\Unit\Builders\SynodicRhythm\FromRecordsTest::test_build_synodic_rhythm_from_records"/>
        <covered by="MarcoConsiglio\Ephemeris\Tests\Unit\Builders\SynodicRhythm\FromRecordsTest::test_from_records_builder_wants_array_data"/>
        <covered by="MarcoConsiglio\Ephemeris\Tests\Unit\Builders\SynodicRhythm\FromRecordsTest::test_from_records_builder_wants_synodic_rhythm_records"/>
      </line>
      <line nr="47">
        <covered by="MarcoConsiglio\Ephemeris\Tests\Unit\Builders\SynodicRhythm\FromRecordsTest::test_from_records_builder_wants_array_data"/>
      </line>
      <line nr="49">
        <covered by="MarcoConsiglio\Ephemeris\Tests\Unit\Builders\SynodicRhythm\FromRecordsTest::test_build_synodic_rhythm_from_records"/>
        <covered by="MarcoConsiglio\Ephemeris\Tests\Unit\Builders\SynodicRhythm\FromRecordsTest::test_from_records_builder_wants_synodic_rhythm_records"/>
      </line>
      <line nr="50">
        <covered by="MarcoConsiglio\Ephemeris\Tests\Unit\Builders\SynodicRhythm\FromRecordsTest::test_build_synodic_rhythm_from_records"/>
        <covered by="MarcoConsiglio\Ephemeris\Tests\Unit\Builders\SynodicRhythm\FromRecordsTest::test_from_records_builder_wants_synodic_rhythm_records"/>
      </line>
      <line nr="51">
        <covered by="MarcoConsiglio\Ephemeris\Tests\Unit\Builders\SynodicRhythm\FromRecordsTest::test_build_synodic_rhythm_from_records"/>
        <covered by="MarcoConsiglio\Ephemeris\Tests\Unit\Builders\SynodicRhythm\FromRecordsTest::test_from_records_builder_wants_synodic_rhythm_records"/>
      </line>
      <line nr="52">
        <covered by="MarcoConsiglio\Ephemeris\Tests\Unit\Builders\SynodicRhythm\FromRecordsTest::test_from_records_builder_wants_synodic_rhythm_records"/>
      </line>
      <line nr="54">
        <covered by="MarcoConsiglio\Ephemeris\Tests\Unit\Builders\SynodicRhythm\FromRecordsTest::test_build_synodic_rhythm_from_records"/>
        <covered by="MarcoConsiglio\Ephemeris\Tests\Unit\Builders\SynodicRhythm\FromRecordsTest::test_from_records_builder_wants_synodic_rhythm_records"/>
      </line>
      <line nr="55">
        <covered by="MarcoConsiglio\Ephemeris\Tests\Unit\Builders\SynodicRhythm\FromRecordsTest::test_build_synodic_rhythm_from_records"/>
      </line>
      <line nr="65">
        <covered by="MarcoConsiglio\Ephemeris\Tests\Unit\Builders\SynodicRhythm\FromRecordsTest::test_build_synodic_rhythm_from_records"/>
      </line>
      <line nr="74">
        <covered by="MarcoConsiglio\Ephemeris\Tests\Unit\Builders\SynodicRhythm\FromRecordsTest::test_build_synodic_rhythm_from_records"/>
      </line>
      <line nr="76">
        <covered by="MarcoConsiglio\Ephemeris\Tests\Unit\Builders\SynodicRhythm\FromRecordsTest::test_build_synodic_rhythm_from_records"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">MarcoConsiglio\Ephemeris\Rhythms\Builders\SynodicRhythm</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="3"/>
      <line no="4">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">MarcoConsiglio\Ephemeris\Rhythms\Builders\Interfaces\Builder</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">MarcoConsiglio\Ephemeris\Rhythms\SynodicRhythm</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">MarcoConsiglio\Ephemeris\Rhythms\SynodicRhythmRecord</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8"/>
      <line no="9">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT"> * Builds a SynodicRhythm from an array of SynodicRhythmRecord(s).</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="12">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">FromRecords</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Builder</token>
      </line>
      <line no="13">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT">     * The data used to create the SynodicRhythm collection.</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT">     * @var mixed</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20"/>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="22">
        <token name="T_DOC_COMMENT">     * The records of the SynodicRhythm.</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT">     * @var array</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$records</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27"/>
      <line no="28">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="29">
        <token name="T_DOC_COMMENT">     * Constructs the builder with an array of SynodiRhythmRecord(s).</token>
      </line>
      <line no="30">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="31">
        <token name="T_DOC_COMMENT">     * @param mixed $data</token>
      </line>
      <line no="32">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">data</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="37"/>
      <line no="38">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="39">
        <token name="T_DOC_COMMENT">     * Validates data.</token>
      </line>
      <line no="40">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="41">
        <token name="T_DOC_COMMENT">     * @return void</token>
      </line>
      <line no="42">
        <token name="T_DOC_COMMENT">     * @throws \InvalidArgumentException</token>
      </line>
      <line no="43">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">validateData</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">data</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"The builder FromRecords must have array data."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$collection</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">collect</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">data</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$collection</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">filter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SynodicRhythmRecord</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">                </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"The builder FromRecords must have an array of SynodicRhythmRecord."</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="56"/>
      <line no="57">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="58">
        <token name="T_DOC_COMMENT">     * Build records.</token>
      </line>
      <line no="59">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="60">
        <token name="T_DOC_COMMENT">     * @return void</token>
      </line>
      <line no="61">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">buildRecords</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// $this-&gt;data contains already SynodicRhythmRecord(s).</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="66"/>
      <line no="67">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="68">
        <token name="T_DOC_COMMENT">     * Fetch the builded SynodicRhythm collection.</token>
      </line>
      <line no="69">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="70">
        <token name="T_DOC_COMMENT">     * @return \MarcoConsiglio\Ephemeris\Rhythms\SynodicRhythm</token>
      </line>
      <line no="71">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">fetchCollection</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SynodicRhythm</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SynodicRhythm</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">data</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="76">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
    </source>
  </file>
</phpunit>
